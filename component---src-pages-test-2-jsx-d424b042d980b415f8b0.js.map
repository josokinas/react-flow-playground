{"version":3,"sources":["webpack://@josokinas/react-flow-playground/./src/components/nodes/action.jsx","webpack://@josokinas/react-flow-playground/./src/pages/test_2.jsx"],"names":["memo","id","data","title","className","type","position","isConnectable","style","backgroundColor","nodeTypes","start","Start","action","Action","finish","Finish","getElementTitle","task","initialElements","workflowData","nextNode","visualSettings","length","push","x","y","source","target","forEach","elements","useState","height","JSON","stringify"],"mappings":"kPAoCA,GAhCeA,WAAK,YAAmB,IAAD,EAAfC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACzB,OACE,gBAAC,IAAD,CAAMC,MAAOD,EAAKC,OAChB,uBAAKC,UAAU,mBACb,2BACE,uBAAKA,UAAU,uDAAf,QAEE,gBAAC,KAAD,CACEH,GAAOA,EAAL,MACFI,KAAK,SACLC,SAAS,OACTC,eAAa,EACbC,MAAO,CAAEC,gBAAe,UAAEP,EAAKM,aAAP,aAAE,UAIhC,2BACE,uBAAKJ,UAAU,wDAAf,SAEE,gBAAC,KAAD,CACEH,GAAOA,EAAL,OACFI,KAAK,SACLC,SAAS,QACTC,eAAa,W,2UClBrBG,EAAY,CAChBC,MAAOC,IACPC,OAAQC,EACRC,OAAQC,KAGJC,EAAkB,SAACC,GACvB,OAAQA,GACN,IAAK,kBACH,MAAO,kBACT,IAAK,eACH,MAAO,eACT,QACE,MAAO,QAIPC,EAAkB,GAExBC,eACE,YAA2D,IAAxDnB,EAAuD,EAAvDA,GAAIiB,EAAmD,EAAnDA,KAAMG,EAA6C,EAA7CA,SAA4Bf,EAAiB,EAAnCgB,eAAkBhB,SAClCa,EAAgBI,SACnBJ,EAAgBK,KAAK,CACnBvB,GAAI,EACJI,KAAM,QACNH,KAAM,CACJC,MAAO,SAETG,SAAU,CAAEmB,EAAG,GAAIC,EAAG,MAExBP,EAAgBK,KAAK,CACnBvB,GAAG,KAAMA,EACT0B,OAAQ,EACRC,OAAQ3B,KAIZkB,EAAgBK,KAAK,CACnBvB,KACAI,KAAM,SACNH,KAAM,CACJC,MAAOc,EAAgBC,IAEzBZ,aAGEe,GACFA,EAASQ,SAAQ,SAACR,GAChBF,EAAgBK,KAAK,CACnBvB,GAAIoB,EAASC,eAAerB,GAC5B0B,OAAQ1B,EACR2B,OAAQP,EAASpB,WAuB3B,MAjBA,WACE,IAAO6B,GAAYC,cAASZ,GAA5B,GAEA,OACE,uBAAKf,UAAU,WACb,8CACA,gBAAC,KAAD,CACQM,YAAWoB,WACjB1B,UAAU,aACVI,MAAO,CAAEwB,OAAQ,WAEnB,oEACA,2BAAMC,KAAKC,UAAUJ,EAAU,KAAM","file":"component---src-pages-test-2-jsx-d424b042d980b415f8b0.js","sourcesContent":["import React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Base from './base';\n\nconst Action = memo(({ id, data }) => {\n  return (\n    <Base title={data.title}>\n      <div className=\"node-task--body\">\n        <div>\n          <div className=\"node-handle--container node-handle--container--left\">\n            Input\n            <Handle\n              id={`${id}-in`}\n              type=\"target\"\n              position=\"left\"\n              isConnectable\n              style={{ backgroundColor: data.style?.['in'] }}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"node-handle--container node-handle--container--right\">\n            Output\n            <Handle\n              id={`${id}-out`}\n              type=\"source\"\n              position=\"right\"\n              isConnectable\n            />\n          </div>\n        </div>\n      </div>\n    </Base>\n  );\n});\n\nexport default Action;\n","import React, { useState } from 'react';\nimport ReactFlow from 'react-flow-renderer';\n\nimport Start from '../components/nodes/start';\nimport Action from '../components/nodes/action';\nimport Finish from '../components/nodes/finish';\n\nimport workflowData from '../data/workflow.json';\n\nconst nodeTypes = {\n  start: Start,\n  action: Action,\n  finish: Finish,\n};\n\nconst getElementTitle = (task) => {\n  switch (task) {\n    case 'upload_document':\n      return 'Upload Document';\n    case 'ocr_autofill':\n      return 'OCR Autofill';\n    default:\n      return 'N/A';\n  }\n};\n\nconst initialElements = [];\n\nworkflowData.workflow.nodes.forEach(\n  ({ id, task, nextNode, visualSettings: { position } }) => {\n    if (!initialElements.length) {\n      initialElements.push({\n        id: 0,\n        type: 'start',\n        data: {\n          title: 'Start',\n        },\n        position: { x: 25, y: 25 },\n      });\n      initialElements.push({\n        id: `0-${id}`,\n        source: 0,\n        target: id,\n      });\n    }\n\n    initialElements.push({\n      id,\n      type: 'action',\n      data: {\n        title: getElementTitle(task),\n      },\n      position,\n    });\n\n    if (nextNode)\n      nextNode.forEach((nextNode) => {\n        initialElements.push({\n          id: nextNode.visualSettings.id,\n          source: id,\n          target: nextNode.id,\n        });\n      });\n  }\n);\n\nfunction Test2() {\n  const [elements] = useState(initialElements);\n\n  return (\n    <div className=\"wrapper\">\n      <h2>Workflow diagram</h2>\n      <ReactFlow\n        {...{ nodeTypes, elements }}\n        className=\"playground\"\n        style={{ height: '550px' }}\n      />\n      <h2>Current React Flow object of elements:</h2>\n      <pre>{JSON.stringify(elements, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default Test2;\n"],"sourceRoot":""}