{"version":3,"sources":["webpack://@josokinas/react-flow-playground/./src/components/nodes/async_task.jsx","webpack://@josokinas/react-flow-playground/./src/components/nodes/condition.jsx","webpack://@josokinas/react-flow-playground/./src/components/nodes/interactive_task.jsx","webpack://@josokinas/react-flow-playground/./src/components/nodes/sync_task.jsx","webpack://@josokinas/react-flow-playground/./src/components/nodes/rule.jsx","webpack://@josokinas/react-flow-playground/./src/pages/test_3.jsx"],"names":["AsyncTask","memo","data","designV","title","selected","className","id","type","position","isConnectable","style","backgroundColor","parseOperands","operation","operands","map","value","join","Expression","Condition","rules","rule","key","hideOutput","expression","InteractiveTask","SyncTask","small","content","nodeTypes","start","Start","interactive_task","sync_task","async_task","condition","Rule","finish","Finish","getElementNodeType","getElementTitle","task","initialElements","workflowData","defaultNode","nextNode","visualSettings","length","push","x","y","source","target","arrowHeadType","taskDefinition","tasksData","name","settings","test","getElementObj","sourceHandle","forEach","useState","elements","setElements","selectedElements","setSelectedElements","useEffect","element","includes","onSelectionChange"],"mappings":"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","file":"component---src-pages-test-3-jsx-910930432f2ecfe4856e.js","sourcesContent":["import React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Base from './base';\n\nconst AsyncTask = memo(({ data, designV }) => {\n  return (\n    <Base title={data.title} selected={data.selected} designV={designV}>\n      <div className=\"node-async-task--body\">\n        <div className=\"node-handle--container node-handle--container--left\">\n          Input\n          <Handle\n            id=\"in\"\n            type=\"target\"\n            position=\"left\"\n            isConnectable\n            style={{ backgroundColor: data.style?.['in'] }}\n          />\n        </div>\n        <div className=\"node-handle--container node-handle--container--right\">\n          Output\n          <Handle id=\"out\" type=\"source\" position=\"right\" isConnectable />\n        </div>\n      </div>\n    </Base>\n  );\n});\n\nexport default AsyncTask;\n","import React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Base from './base';\n\nconst parseOperands = (operation, operands) =>\n  operands\n    .map(({ operation, operands, value }) => {\n      if (operands) return `(${parseOperands(operation, operands)})`;\n\n      return value;\n    })\n    .join(` ${operation} `);\n\nexport const Expression = memo(({ operation, operands }) => {\n  return (\n    <div className=\"node-condition-expression--container\">\n      {parseOperands(operation, operands)}\n    </div>\n  );\n});\n\nconst Condition = memo(({ id, data }) => {\n  return (\n    <Base selected={data.selected} designV={data.designV}>\n      <div className=\"node-condition--body\">\n        <div className=\"node-handle--container node-handle--container--left\">\n          Input\n          <Handle\n            id=\"in\"\n            type=\"target\"\n            position=\"left\"\n            isConnectable\n            style={{ backgroundColor: data.style?.['in'] }}\n          />\n        </div>\n        <div>\n          {data.rules &&\n            data.rules.map((rule) => (\n              <div\n                key={`${id}=rule.id`}\n                className=\"node-handle--container node-handle--container--right\"\n              >\n                {!data.hideOutput && (\n                  <Expression\n                    operation={rule.expression.operation}\n                    operands={rule.expression.operands}\n                  />\n                )}\n                <Handle\n                  id={rule.id}\n                  type=\"source\"\n                  position=\"right\"\n                  isConnectable\n                />\n              </div>\n            ))}\n          <div className=\"node-handle--container node-handle--container--right\">\n            {!data.hideOutput && 'No'}\n            <Handle id=\"no\" type=\"source\" position=\"right\" isConnectable />\n          </div>\n        </div>\n      </div>\n    </Base>\n  );\n});\n\nexport default Condition;\n","import React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Base from './base';\n\nconst InteractiveTask = memo(({ data }) => {\n  return (\n    <Base title={data.title} selected={data.selected} designV={data.designV}>\n      <div className=\"node-interactive-task--body\">\n        <div className=\"node-handle--container node-handle--container--left\">\n          Input\n          <Handle\n            id=\"in\"\n            type=\"target\"\n            position=\"left\"\n            isConnectable\n            style={{ backgroundColor: data.style?.['in'] }}\n          />\n        </div>\n        <div className=\"node-handle--container node-handle--container--right\">\n          Output\n          <Handle id=\"out\" type=\"source\" position=\"right\" isConnectable />\n        </div>\n      </div>\n    </Base>\n  );\n});\n\nexport default InteractiveTask;\n","import React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Base from './base';\n\nconst SyncTask = memo(({ data }) => {\n  return (\n    <Base title={data.title} selected={data.selected} designV={data.designV}>\n      <div className=\"node-sync-task--body\">\n        <div className=\"node-handle--container node-handle--container--left\">\n          Input\n          <Handle\n            id=\"in\"\n            type=\"target\"\n            position=\"left\"\n            isConnectable\n            style={{ backgroundColor: data.style?.['in'] }}\n          />\n        </div>\n        <div className=\"node-handle--container node-handle--container--right\">\n          Output\n          <Handle id=\"out\" type=\"source\" position=\"right\" isConnectable />\n        </div>\n      </div>\n    </Base>\n  );\n});\n\nexport default SyncTask;\n","import React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Base from './base';\n\nconst Rule = memo(({ data }) => {\n  return (\n    <Base small>\n      <div className=\"node-rule--body\">\n        <div className=\"node-handle--container node-handle--container--left\">\n          <Handle\n            id=\"in\"\n            type=\"target\"\n            position=\"left\"\n            isConnectable\n            style={{ backgroundColor: data.style?.['in'] }}\n          />\n        </div>\n        <div>{data.content}</div>\n        <div className=\"node-handle--container node-handle--container--right\">\n          <Handle id=\"out\" type=\"source\" position=\"right\" isConnectable />\n        </div>\n      </div>\n    </Base>\n  );\n});\n\nexport default Rule;\n","import React, { useEffect, useState } from 'react';\nimport ReactFlow from 'react-flow-renderer';\n\nimport Start from '../components/nodes/start';\nimport InteractiveTask from '../components/nodes/interactive_task';\nimport SyncTask from '../components/nodes/sync_task';\nimport AsyncTask from '../components/nodes/async_task';\nimport Condition, { Expression } from '../components/nodes/condition';\nimport Rule from '../components/nodes/rule';\nimport Finish from '../components/nodes/finish';\n\nimport tasksData from '../data/tasks.json';\nimport workflowData from '../data/workflow_2.json';\n\nconst nodeTypes = {\n  start: Start,\n  interactive_task: InteractiveTask,\n  sync_task: SyncTask,\n  async_task: AsyncTask,\n  condition: Condition,\n  rule: Rule,\n  finish: Finish,\n};\n\nconst getElementNodeType = (type) => {\n  switch (type) {\n    case 'INTERACTIVE':\n      return 'interactive_task';\n    case 'SYNC':\n      return 'sync_task';\n    case 'ASYNC':\n      return 'async_task';\n  }\n};\n\nconst getElementTitle = (task) => {\n  switch (task) {\n    case 'upload_document':\n      return 'Upload Document';\n    case 'upload_selfie':\n      return 'Upload Selfie';\n    case 'collect_address':\n      return 'Collect Address';\n    case 'ocr_autofill':\n      return 'OCR Autofill';\n    case 'aamva':\n      return 'AAMVA';\n    case 'facial_similarity_report':\n      return 'Facial Similarity Report';\n    case 'document_report':\n      return 'Document Report';\n    case 'watchlist_report':\n      return 'Watchlist Report';\n    case 'pass_applicant':\n      return 'Pass';\n    case 'consider_applicant':\n      return 'Fail';\n    default:\n      return 'N/A';\n  }\n};\n\nconst getElementObj = ({ id, type, task, rules, position }) => {\n  switch (type) {\n    case 'TASK': {\n      const taskDefinition = tasksData.tasks.find(({ name }) => name === task);\n      return {\n        id: `${id}`,\n        type: getElementNodeType(taskDefinition.type),\n        data: {\n          title: taskDefinition.settings?.title || getElementTitle(task),\n          designV: 2,\n        },\n        position,\n      };\n    }\n    case 'CONDITION':\n      return {\n        id: `${id}`,\n        type: 'condition',\n        data: { rules, designV: 2, hideOutput: true },\n        position,\n        test: ' TEST',\n      };\n    case 'FINAL':\n      return {\n        id: `${id}`,\n        type: 'finish',\n        data: {\n          title: getElementTitle(task),\n          designV: 2,\n        },\n        position,\n      };\n  }\n};\n\nconst initialElements = [];\n\nworkflowData.workflow.nodes.forEach(\n  ({\n    id,\n    type,\n    task,\n    rules,\n    defaultNode,\n    nextNode,\n    visualSettings: { position },\n  }) => {\n    if (!initialElements.length) {\n      initialElements.push({\n        id: '0',\n        type: 'start',\n        data: {\n          title: 'Start',\n          designV: 2,\n        },\n        position: { x: 25, y: 25 },\n      });\n      initialElements.push({\n        id: `0-${id}`,\n        source: '0',\n        target: `${id}`,\n        type: 'smoothstep',\n        arrowHeadType: 'arrow',\n      });\n    }\n\n    initialElements.push(getElementObj({ id, type, task, rules, position }));\n\n    if (defaultNode) {\n      initialElements.push({\n        id: `default-${id}`,\n        type: 'rule',\n        data: {\n          content: 'else',\n        },\n        position: defaultNode.visualSettings.position,\n      });\n\n      // from condition node to rule node\n      initialElements.push({\n        id: `${id}-default-${id}`,\n        source: `${id}`,\n        sourceHandle: 'no',\n        target: `default-${id}`,\n        type: 'smoothstep',\n        arrowHeadType: 'arrow',\n      });\n      // from rule node to \"default\" node\n      initialElements.push({\n        id: `default-${id}-${defaultNode.id}`,\n        source: `default-${id}`,\n        sourceHandle: 'no',\n        target: `${defaultNode.id}`,\n        type: 'smoothstep',\n        arrowHeadType: 'arrow',\n      });\n    }\n\n    if (nextNode)\n      nextNode.forEach((nextNode) => {\n        initialElements.push({\n          id: nextNode.visualSettings.id,\n          source: `${id}`,\n          target: `${nextNode.id}`,\n          type: 'smoothstep',\n          arrowHeadType: 'arrow',\n        });\n      });\n\n    if (rules)\n      rules.forEach((rule) => {\n        initialElements.push({\n          id: `rule-${id}`,\n          type: 'rule',\n          data: {\n            content: (\n              <Expression\n                operation={rule.expression.operation}\n                operands={rule.expression.operands}\n              />\n            ),\n          },\n          position: rule.visualSettings.position,\n        });\n\n        // from condition node to rule node\n        initialElements.push({\n          id: `${id}-rule-${id}`,\n          source: `${id}`,\n          sourceHandle: `${rule.id}`,\n          target: `rule-${id}`,\n          type: 'smoothstep',\n          arrowHeadType: 'arrow',\n        });\n        // from rule node to each next node\n        rule.nextNode.forEach((nextNode) => {\n          initialElements.push({\n            id: `rule-${id}-${nextNode.id}`,\n            source: `rule-${id}`,\n            sourceHandle: `${rule.id}`,\n            target: `${nextNode.id}`,\n            type: 'smoothstep',\n            arrowHeadType: 'arrow',\n          });\n        });\n      });\n  }\n);\n\nfunction Test3() {\n  const [elements, setElements] = useState(initialElements);\n  const [selectedElements, setSelectedElements] = useState([]);\n\n  useEffect(() => {\n    setElements([...elements]);\n    setElements((elements) =>\n      elements.map((element) => {\n        element.data = {\n          ...element.data,\n          selected: selectedElements.includes(`${element.id}`),\n        };\n\n        return element;\n      })\n    );\n  }, [selectedElements, setElements]);\n\n  const handleSelectionChange = (elements) => {\n    if (!elements) return;\n\n    const selectedElements = elements.map((element) => element.id);\n\n    setSelectedElements(selectedElements);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <ReactFlow\n        nodeTypes={nodeTypes}\n        elements={elements}\n        onSelectionChange={handleSelectionChange}\n        className=\"playground\"\n      />\n    </div>\n  );\n}\n\nexport default Test3;\n"],"sourceRoot":""}